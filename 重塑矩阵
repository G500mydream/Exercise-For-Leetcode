/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
int** matrixReshape(int** mat, int matSize, int* matColSize, int r, int c, int* returnSize, int** returnColumnSizes){
    int m=matSize;
    int n=matColSize[0];
    if(r*c!=m*n)
    {
        *returnSize=matSize;
        *returnColumnSizes=matColSize;
        return mat;
    }
    *returnColumnSizes=(int*)malloc(sizeof(int)*r);
    *returnSize=r;
    int**ans=(int**)malloc(sizeof(int*)*r);
    for(int i=0;i<r;i++)
    {
        (*returnColumnSizes)[i]=c;
        ans[i]=(int*)malloc(sizeof(int)*c);
    }
    for(int x=0;x<m*n;x++)
    {
        ans[x/c][x%c]=mat[x/n][x%n];
    }
    return ans;
}

//也是抄的，都不好意思了
